<div class="modal fade" id="createFolderModal" tabindex="-1" aria-labelledby="createFolderModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form id="create-folder-form" class="modal-content p-1 rounded-4">
      <div class="modal-header border-0">
        <h1 class="modal-title fs-5" id="createFolderModalLabel">Новая папка</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
      </div>
      <div class="modal-body">
        <label for="new-folder-input" class="mb-3">Введите имя папки</label>
        <input type="text" name="folderName" id="new-folder-input" class="form-control form-control-lg bg-body-secondary px-4 py-2 rounded-4 border-0" placeholder="Введите имя папки" required/>
      </div>
      <div class="modal-footer border-0">
        <button type="button" class="btn btn-outline-secondary btn-lg rounded-4" data-bs-dismiss="modal">
          Отмена
        </button>
        <button type="submit" class="btn btn-primary btn-lg rounded-4">
          Создать
        </button>
      </div>
    </form>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById("create-folder-form");
    const input = document.getElementById("new-folder-input");
    const modal = document.getElementById("createFolderModal");
    
    if (!form || !input || !modal) {
        console.error('Не найдены элементы модального окна создания папки');
        return;
    }
    
    console.log('Модальное окно создания папки инициализировано');
    
    // Автоматический фокус при открытии модального окна
    modal.addEventListener('shown.bs.modal', function () {
        console.log('Модальное окно открыто, устанавливаем фокус');
        setTimeout(function() {
            input.focus();
            input.select();
        }, 100);
    });
    
    // Очистка формы при закрытии
    modal.addEventListener('hidden.bs.modal', function () {
        console.log('Модальное окно закрыто, очищаем форму');
        form.reset();
    });
    
    form.addEventListener("submit", async function(e) {
        e.preventDefault();
        console.log('Форма отправлена');
        
        const submitBtn = form.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = 'Создание...';
        submitBtn.disabled = true;
        
        try {
            const name = input.value.trim();
            console.log('Имя папки:', name);
            
            if (!name) {
                alert('Введите имя папки');
                input.focus();
                return;
            }
            
            const url = window.location.search.replace("?fs=", "") || "/";
            console.log('URL:', url);
            
            const req = await fetch("/api/create-folder", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                },
                body: JSON.stringify({ name, url })
            });
            
            if (!req.ok) throw new Error("Ошибка сети");
            
            const res = await req.json();
            console.log('Ответ сервера:', res);
            
            if (res.status === false) throw new Error(res.msg || "Ошибка создания папки");
            
            // Закрываем модальное окно и перезагружаем страницу
            const modalInstance = bootstrap.Modal.getInstance(modal);
            if (modalInstance) {
                modalInstance.hide();
            }
            window.location.reload();
            
        } catch (error) {
            console.error('Ошибка создания папки:', error);
            alert('Ошибка создания папки: ' + error.message);
        } finally {
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
        }
    });
    
    // Обработка нажатия Enter
    input.addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            console.log('Нажат Enter');
            form.dispatchEvent(new Event('submit', { cancelable: true, bubbles: true }));
        }
    });
    
    // Дополнительная отладка
    input.addEventListener('focus', function() {
        console.log('Поле ввода получило фокус');
    });
    
    input.addEventListener('input', function() {
        console.log('Введен текст:', this.value);
    });
});
</script>