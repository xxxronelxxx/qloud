<div class="bg-body-tertiary px-md-4 py-md-5 p-4 text-center rounded-4 mx-auto" style="max-width: 500px;width:100%;">
    <div class="bg-body rounded-4 mx-auto position-relative" style="max-width: 300px; width: 100%; aspect-ratio: 1;">
        <img id="audio-player" class="w-100 rounded-4" src="/audio-promo.png?v=1.0.0" loading="lazy" alt="" />

        <div class="position-absolute top-50 start-50 translate-middle text-center" style="width: 80%;
              max-width: 260px;">

            <button id="play-audio" class="btn btn-light rounded-4 btn-lg border-0 text-dark-subtle scale-hover"
                style="width:85px; height:85px; font-size:3rem; background-color: rgba(var(--bs-light-rgb), .7);">
                <i id="play-audio-icon" class="bi bi-play-fill"></i>
            </button>
        </div>
    </div>
    <div class="d-flex align-items-center mt-5 gap-3 rounded-4 px-3">
        <span id="currentTime" class="small text-muted me-2">0:00</span>

        <input id="customRange3" type="range" class="form-range flex-grow-1 w-100" min="0" max="0" step="0.01"
            value="0" />

        <span id="duration" class="small text-muted ms-2">0:00</span>
    </div>
</div>

<audio id="audio" src="<%- fileContent %>" preload="none"></audio>    

<script type="module">
    const audio         = document.getElementById('audio');
    const playBtn       = document.getElementById('play-audio');
    const playIcon      = document.getElementById('play-audio-icon');
    const scrubber      = document.getElementById('customRange3');
    const currentTimeEl = document.getElementById('currentTime');
    const durationEl    = document.getElementById('duration');

    // Формат времени в M:SS
    const formatTime = s => Math.floor(s / 60) + ':' + String(Math.floor(s % 60)).padStart(2, '0');

    // Когда знаем длительность трека — инициализируем scrubber и цифру
    audio.addEventListener('loadedmetadata', () => {
        scrubber.max = audio.duration;
        durationEl.textContent = formatTime(audio.duration);
    });

    // Обновляем ползунок и цифру текущего времени
    audio.addEventListener('timeupdate', () => {
        scrubber.value = audio.currentTime;
        currentTimeEl.textContent = formatTime(audio.currentTime);
    });

    // Перемотка по scrubber
    scrubber.addEventListener('input', () => {
        audio.currentTime = scrubber.value;
    });

    // Play / Pause и смена иконки
    playBtn.addEventListener('click', () => {
        if (audio.paused) {
            audio.play();
            playIcon.classList.replace('bi-play-fill', 'bi-pause-fill');
        } else {
            audio.pause();
            playIcon.classList.replace('bi-pause-fill', 'bi-play-fill');
        }
    });
</script>